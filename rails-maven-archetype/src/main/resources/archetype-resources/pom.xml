#set( $symbol_dollar = '$' )
<?xml version="1.0" encoding="UTF-8"?>
<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>${groupId}</groupId>
  <artifactId>${artifactId}</artifactId>
  <packaging>war</packaging>
  <version>${version}</version>
  <name>${artifactId} - rails${railsVersion.substring(0,1)} application</name>

  <repositories>
#literal()
    <!--
	the source for the gem artifacts
    -->
#end
    <repository>
      <id>rubygems-releases</id>
      <url>http://gems.saumya.de/releases</url>
    </repository>
#if( $railsVersion.matches(".*[a-zA-Z].*") )
    <repository>
      <id>rubygems-prereleases</id>
      <url>http://gems.saumya.de/prereleases</url>
    </repository>
#end
  </repositories>

  <dependencies>
#literal()
    <!--
	this is a version which works properly with having
	rails gems in WEB-INF/gems
    -->
#end
    <dependency>
      <groupId>org.jruby.rack</groupId>
      <artifactId>jruby-rack</artifactId>
      <version>1.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.jruby</groupId>
      <artifactId>jruby-complete</artifactId>
      <version>1.5.1</version>
    </dependency>
#literal()
    <!--
	gem dependencies
    -->
#end
    <dependency>
      <groupId>rubygems</groupId>
      <artifactId>activerecord-jdbc-adapter</artifactId>
      <version>0.9.4</version>
      <type>gem</type>
    </dependency>
    <dependency>
      <groupId>rubygems</groupId>
      <artifactId>jdbc-${database}</artifactId>
#literal()
      <!--
	  for the stability of the build it is better to change this to
	  specific working version
      -->
#end
      <version>[0.0.0,)</version>
      <type>gem</type>
    </dependency>
    <dependency>
      <groupId>rubygems</groupId>
      <artifactId>rails</artifactId>
      <version>${railsVersion}</version>
      <type>gem</type>
    </dependency>
  </dependencies>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jruby.plugins.version>0.21.0-SNAPSHOT</jruby.plugins.version>
#literal()
    <!--
	this is needed for the maven-war-plugin configuration
    -->
#end
    <jruby.gem.home>${symbol_dollar}{project.build.directory}/rubygems</jruby.gem.home>
    <jruby.gem.path>${symbol_dollar}{project.build.directory}/rubygems</jruby.gem.path>
  </properties>
  <build>
    <plugins>
#literal()
      <!--
	  this plugin gives you basic jruby related goals. overview:
	  $ mvn ruby:help
      -->
#end
      <plugin>
        <groupId>de.saumya.mojo</groupId>
        <artifactId>jruby-maven-plugin</artifactId>
        <version>${symbol_dollar}{jruby.plugins.version}</version>
#if( $railsVersion.substring(0,1) == '3' )
	<executions>
	  <execution>
	    <phase>prepare-package</phase>
	    <goals><goal>jruby</goal></goals>
	    <configuration>
	      <script>
		require 'fileutils'
		web_inf = File.join('${project.build.directory}', '${project.build.finalName}', 'WEB-INF')
		FileUtils.mkdir_p(web_inf)
		FileUtils.cp('Gemfile.maven', File.join(web_inf, 'Gemfile'))
	      </script>
	    </configuration>
	  </execution>
	</executions>
#end
      </plugin>
#literal()
      <!--
	  this plugin gives you basic rubygems related goals and manages
	  the gems for maven. overview:
	  $ mvn gem:help
      -->
#end
      <plugin>
        <groupId>de.saumya.mojo</groupId>
        <artifactId>gem-maven-plugin</artifactId>
        <version>${symbol_dollar}{jruby.plugins.version}</version>
        <extensions>true</extensions>
	<executions>
	  <execution>
	    <phase>prepare-package</phase>
	    <goals><goal>initialize</goal></goals>
	  </execution>
	</executions>
      </plugin>
#literal()
      <!--
	  this plugin has some rails specific goals.
      -->
#end
      <plugin>
        <groupId>de.saumya.mojo</groupId>
        <artifactId>rails${railsVersion.substring(0,1)}-maven-plugin</artifactId>
        <version>${symbol_dollar}{jruby.plugins.version}</version>
      </plugin>
#literal()
      <!--
	  this plugin has some rspec specific goals.
      -->
#end
      <plugin>
        <groupId>de.saumya.mojo</groupId>
        <artifactId>rspec-maven-plugin</artifactId>
        <version>${symbol_dollar}{jruby.plugins.version}</version>
#literal()
      <!-- uncomment this if you want to use rspec in test phase
#end
	<executions>
	  <execution>
	    <phase>test</phase>
	    <goals><goal>test</goal></goals>
	  </execution>
	</executions>
#literal()
        rspec -->
#end
      </plugin>
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.0.2</version>
        <configuration>
          <webResources>
            <resource>
              <directory>public</directory>
            </resource>
            <resource>
              <directory>.</directory>
              <targetPath>WEB-INF</targetPath>
              <includes>
                <include>app/**</include>
                <include>config/**</include>
                <include>lib/**</include>
                <include>vendor/**</include>
#if( $database == "sqlite3")
#literal()
  <!--
      this might be not a good idea for production but for
      testing this should be OK. anyways it will not work when
      running the application from a packed war file
  -->
#end
                <include>db/*sqlite3</include>
#end
              </includes>
            </resource>
#literal()
     <!--
	 if you freeze your rails and unpack your gems you need to
	 comment/remove the next section to avoid ending up with
	 two sets of gems inside the war file
     -->
#end
            <resource>
              <directory>${symbol_dollar}{jruby.gem.path}</directory>
              <targetPath>WEB-INF/gems</targetPath>
            </resource>
          </webResources>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>7.0.1.v20091125</version>
      </plugin>
    </plugins>
  </build>

</project>
